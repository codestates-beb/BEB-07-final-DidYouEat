name: nest docker deploy
on:
  push: # push 이벤트 발생 시
    branches: # 브랜치 설정
      - main
      - dev
    paths: # 경로 설정
      - server/**
  workflow_dispatch: # 직접실행 옵션

jobs:
  build: # job id
    env:
      CI: false # warning 무시
      working-directory: ./server

    name: docker build # job 이름
    runs-on: ubuntu-latest # 실행환경
    defaults:
      run:
        working-directory: "./server" # 기본 경로 설정
    steps:
      - name: checkout code # 레포지토리 파일 받아옴
        uses: actions/checkout@v3.3.0

      - name: Set up Docker Buildx # buildx setting
        uses: docker/setup-buildx-action@v2

      # - name: Login to DockerHub # 도커허브 로그인
      #   uses: docker/login-action@v2.1.0
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }} # 유저이름
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.CR_PAT}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{env.working-directory}} # server경로로 context 설정
          file: ${{env.working-directory}}/Dockerfile #Dockerfile 경로
          platforms: linux/amd64
          push: true
          tags: bronzefist/didapi:latest
          cache-from: type=gha # github action용 docker 캐시 적용
          cache-to: type=gha,mode=max

      # - name:
      #   uses: actions/cache@v3.2.3
      #   with:
      #     path: node_modules # 캐시 대상폴더
      #     key: ${{runner.os}}-build-${{hashFiles('**/package-lock.json')}} # 식별 키 => package-lock.json
      #     restore-key: | # 일치하는 캐시 키가 없을경우 차선책
      #       ${{runner.os}}-build-
      #       ${{runner.os}}-

      # - name: s3 upload # aws 업로드
      #   env: # 환경변수 설정
      #     AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      #     AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      #   run: | # 빌드폴더 원격 복사
      #     aws s3 cp \
      #       --recursive \
      #       --region ap-northeast-2 \
      #       out s3://didyoueeat
